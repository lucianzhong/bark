name: Build

on: [pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macOS-10.15]

    steps:
      - uses: actions/checkout@v2

      # Used to host cibuildwheel
      - uses: actions/setup-python@v2

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==1.11.0

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BEFORE_BUILD: python setup.py build_ext


# name: Build Wheels

# on: [pull_request]

# jobs:
#   build_wheels:
#     name: Build wheels on ${{ matrix.os }}
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [macOS-latest]
#         python-version: [3.6, 3.7, 3.8]

#     steps:
#       - uses: actions/checkout@v2

#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v2
#         with:
#           python-version: ${{ matrix.python-version }}

#       # install tools
#       - name: Install tools
#         run:  |
#           python -m pip install --upgrade pip
#           python -m pip install wheel twine auditwheel packaging==20.5

#       # install requirements
#       - name: Install requirements
#         run: python -m pip install -r ./tools/installers/requirements.txt

#       # install bazel
#       - name: Setup bazel
#         uses: jwlawson/actions-setup-bazel@v1
#         with:
#           bazel-version: '4.0.0'

#       # make sure it is installed
#       - name: Use bazel
#         run: bazel --version
#         # run: bazel clean --expunge

#       # build bark-ml package
#       - name: Build package
#         env:
#           BAZEL_USE_XCODE_TOOLCHAIN: 1
#         run: bazel build //bark:pip_package --macos_minimum_os=10.14

#       # should be here now: bazel-bin/bark/pip_package.runfiles
#       - name: Copy manifest
#         run:  |
#           workspace_name=bark_project
#           bazel_manifest=./bazel-bin/bark/pip_package.runfiles/MANIFEST
#           pip_manifest=./bazel-bin/bark/pip_package.runfiles/$workspace_name/MANIFEST.in
#           while IFS=' ' read -r line delim; do
#             if [[ ${line} != *".py"* ]];then
#                 workspace_str_len=${#workspace_name}
#                 echo "include ${line:$((workspace_str_len+1))}" >> $pip_manifest
#             fi
#           done <$bazel_manifest

#       # run buildwheel
#       - name: Build wheels
#         # run: cd ./bazel-bin/bark_ml/pip_package.runfiles/bark_ml && python -m cibuildwheel --output-dir wheelhouse
#         env:
#           TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
#           TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
#           MACOSX_DEPLOYMENT_TARGET: 10.15
#         run:	|
#           cd ./bazel-bin/bark/pip_package.runfiles/bark_project
#           python setup.py clean
#           python setup.py sdist bdist_wheel --universal2
#           python setup.py test
#           python -m twine upload --skip-existing dist/*
